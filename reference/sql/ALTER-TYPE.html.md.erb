---
title: ALTER TYPE
---

Changes the definition of a data type.

## Synopsis<a id="synopsis"></a>

``` pre
ALTER TYPE name
   OWNER TO new_owner | SET SCHEMA new_schema
         
```

## Description<a id="desc"></a>

 `ALTER TYPE` changes the definition of an existing type. You can change the owner and the schema of a type.

You must own the type to use `ALTER TYPE`. To change the schema of a type, you must also have `CREATE` privilege on the new schema. To alter the owner, you must also be a direct or indirect member of the new owning role, and that role must have `CREATE` privilege on the type's schema. (These restrictions enforce that altering the owner does not do anything that could be done by dropping and recreating the type. However, a superuser can alter ownership of any type.)

## Parameters<a id="altertype__section4"></a>

 *name*   
The name (optionally schema-qualified) of an existing type to alter.

 *new\_owner*   
The user name of the new owner of the type.

 *new\_schema*   
The new schema for the type.

## Examples<a id="altertype__section5"></a>

To change the owner of the user-defined type `email` to `joe`:

``` pre
ALTER TYPE email OWNER TO joe;
```

To change the schema of the user-defined type `email` to `customers`:

``` pre
ALTER TYPE email SET SCHEMA customers;
```

## Compatibility<a id="altertype__section6"></a>

There is no `ALTER TYPE` statement in the SQL standard.

## See Also<a id="see"></a>

[CREATE TYPE](CREATE-TYPE.html), [DROP TYPE](DROP-TYPE.html)


